- hosts: all
  vars:
    nvm_version: 0.39.7
    repo_url: https://github.com/srflp/billionaires-dashboard.git
    branch: main
    sparse_checkout_paths:
      - backend
      - /package.json
  tasks:
    - name: Update and upgrade apt packages
      become: true
      ansible.builtin.apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 # one day
    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    - name: Install node
      ansible.builtin.shell: >
        bash -ic 'nvm install --lts'
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node"
    - name: Enable pnpm with corepack
      ansible.builtin.shell: >
        bash -ic 'corepack enable pnpm'
    - name: Create temporary project build directory
      ansible.builtin.tempfile:
        state: directory
      register: temp_dir
    - name: Prepare sparse git repository
      ansible.builtin.shell: |
        git init
        git config core.sparsecheckout true
        git remote add origin {{ repo_url }}
      args:
        chdir: "{{ temp_dir.path }}"
        creates: "{{ temp_dir.path }}/.git"
    - name: Configure sparse-checkout
      ansible.builtin.copy:
        dest: "{{ temp_dir.path }}/.git/info/sparse-checkout"
        content: "{{ sparse_checkout_paths | join('\n') }}"
    - name: Set build directory path
      set_fact:
        build_dir: "{{ temp_dir.path }}/{{ sparse_checkout_paths | first }}"
    - name: Clone the code
      ansible.builtin.shell: git pull origin {{ branch }}
      args:
        chdir: "{{ temp_dir.path }}"
        creates: "{{ build_dir }}"
    - name: Install the package manager using corepack
      ansible.builtin.shell: bash -ic "corepack install"
      args:
        chdir: "{{ build_dir }}"
    - name: Install the dependencies
      ansible.builtin.shell: bash -ic "pnpm install"
      args:
        chdir: "{{ build_dir }}"
    - name: Build the app
      ansible.builtin.shell: bash -ic "pnpm build"
      args:
        chdir: "{{ build_dir }}"
    - name: Copy a build folder into /home/vagrant/app
      ansible.builtin.copy:
        src: "{{ build_dir }}/build/"
        dest: /home/vagrant/app
        remote_src: true
    - name: Copy an env file into /home/vagrant/app/
      ansible.builtin.copy:
        src: "{{ build_dir }}/.env.vagrant-prod"
        dest: /home/vagrant/app/.env
        remote_src: true
    - name: Copy data into /home/vagrant/app/
      ansible.builtin.copy:
        src: "{{ build_dir }}/data/"
        dest: /home/vagrant/app/data
        remote_src: true
    - name: Install pm2
      community.general.npm:
        name: pm2
        global: true
    - name: Start the app using pm2
      ansible.builtin.shell: >
        pm2 start "node --env-file=.env server.js"
      args:
        chdir: "/home/vagrant/app/"
    - name: Remove the temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent
